import pygame
import time

pygame.init()

'''What still needs done
    1.  run into black trail event
    2.  second player with computer control
    3.  one or two player decision message
    4.  winner declaration message'''

white = (255,255,255)
black = (0,0,0)
red = (255, 0, 0)
blue = (0, 0, 255)
green = (0, 255, 0)

display_width = 800
display_height = 600

path = 0,0
untouchablePath = [path]

def wall(untouchablePath):
    for XnY in untouchablePath:
        if XnY[0] == 0 or XnY[1] == 800 or XnY == 0 or XnY[1] == 600:
            gameOver = True

gameDisplay = pygame.display.set_mode((display_width,display_height))

pygame.display.set_caption('Slither')



font = pygame.font.SysFont(None, 25)

def message_to_screen(msg, color):
    screen_text = font.render(msg, True, color)
    gameDisplay.blit(screen_text, [display_width/2, display_height/2])
def gameLoop():
    gameExit = False
    gameOver = False

    lead_x = display_width/4
    lead_y = display_height/4
    enemy_lead_x = 3 * (display_width/4)
    enemy_lead_y = 3 * (display_height/4)
    lead_x_change = 0
    lead_y_change = 0
    enemy_lead_x_change = 0
    enemy_lead_y_change = 0
    block_size = 10
    clock = pygame.time.Clock()
    fps = 15
    movingRight = False
    movingLeft = False
    movingUp = False
    movingDown = False
    enemy_movingRight = False
    enemy_movingLeft = False
    enemy_movingUp = False
    enemy_movingDown = False
    
    gameDisplay.fill(green)
    
    while not gameExit:
        while gameOver == True:
            gameDisplay.fill(white)
            message_to_screen("Game over, press C to play again or Q to quit", red)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        gameExit = True
                        gameOver = False
                    if event.key == pygame.K_c:
                        gameLoop()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    lead_x_change = -block_size
                    lead_y_change = 0
                    movingLeft = True
                    movingRight = False
                    movingUp = False
                    movingDown = False
                elif event.key == pygame.K_RIGHT:
                    lead_x_change = block_size
                    lead_y_change = 0
                    movingLeft = False
                    movingRight = True
                    movingUp = False
                    movingDown = False
                elif event.key == pygame.K_UP:
                    lead_y_change = -block_size
                    lead_x_change = 0
                    movingLeft = False
                    movingRight = False
                    movingUp = True
                    movingDown = False
                elif event.key == pygame.K_DOWN:
                    lead_y_change = block_size
                    lead_x_change = 0
                    movingLeft = False
                    movingRight = False
                    movingUp = False
                    movingDown = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_a:
                    enemy_lead_x_change = -block_size
                    enemy_lead_y_change = 0
                    enemy_movingLeft = True
                    enemy_movingRight = False
                    enemy_movingUp = False
                    enemy_movingDown = False
                elif event.key == pygame.K_s:
                    enemy_lead_x_change = block_size
                    enemy_lead_y_change = 0
                    enemy_movingLeft = False
                    enemy_movingRight = True
                    enemy_movingUp = False
                    enemy_movingDown = False
                elif event.key == pygame.K_w:
                    enemy_lead_x_change = 0
                    enemy_lead_y_change = -block_size
                    enemy_movingLeft = False
                    enemy_movingRight = False
                    enemy_movingUp = True
                    enemy_movingDown = False
                elif event.key == pygame.K_z:
                    enemy_lead_x_change = 0
                    enemy_lead_y_change = block_size
                    enemy_movingLeft = False
                    enemy_movingRight = False
                    enemy_movingUp = False
                    enemy_movingDown = True
                 

            if lead_x >= display_width or lead_x < 0 or lead_y >= display_height or lead_y < 0:
                gameOver = True
            if enemy_lead_x >= display_width or enemy_lead_x < 0 or enemy_lead_y >= display_height or enemy_lead_y < 0:
                gameOver = True
        lead_x += lead_x_change
        lead_y += lead_y_change
        enemy_lead_x += enemy_lead_x_change
        enemy_lead_y += enemy_lead_y_change

         
                     
        
        pygame.draw.rect(gameDisplay, blue, [lead_x, lead_y, block_size, block_size])
        pygame.draw.rect(gameDisplay, red, [enemy_lead_x, enemy_lead_y, block_size, block_size])
        if(movingLeft == True):
            pygame.draw.rect(gameDisplay, black, [lead_x + 10, lead_y, block_size, block_size])
        if(movingRight == True):
            pygame.draw.rect(gameDisplay, black, [lead_x - 10, lead_y, block_size, block_size])
        if(movingUp == True):
            pygame.draw.rect(gameDisplay, black, [lead_x, lead_y + 10, block_size, block_size])
        if(movingDown == True):
            pygame.draw.rect(gameDisplay, black, [lead_x, lead_y - 10, block_size, block_size])
        if(enemy_movingRight == True):
            pygame.draw.rect(gameDisplay, black, [enemy_lead_x - 10, enemy_lead_y, block_size, block_size])
        if(enemy_movingLeft == True):
            pygame.draw.rect(gameDisplay, black, [enemy_lead_x + 10, enemy_lead_y, block_size, block_size])
        if(enemy_movingUp == True):
            pygame.draw.rect(gameDisplay, black, [enemy_lead_x, enemy_lead_y + 10, block_size, block_size])
        if(enemy_movingDown == True):
            pygame.draw.rect(gameDisplay, black, [enemy_lead_x, enemy_lead_y - 10, block_size, block_size])
        pygame.display.update()
        clock.tick(fps)

             

   
    pygame.quit()

    quit()
gameLoop()
